$#include "scene/FsSceneNode.h"
class SceneNode
{
		SceneNode();
		void update(FsLong msec);
		void updateSelf(FsLong mesc);
		void draw(Render* r);
		void drawSelf(Render* r);


		Vector3 localToWorld(const Vector3& v);
		Vector3 worldToLocal(const Vector3& v);


		/* relation ship*/
		void addChild(SceneNode* n);
		void remove(SceneNode* n);

	//	SceneNode* getChildByName(FsString* name,FsBool recusive=0);
	//	SceneNode* getChildByName(const FsChar* name,FsBool recusive=0);

		void updateLocalMatrix();
		void updateWorldMatrix();
		void updateAllWorldMatrix();


	/* get transform info */
		Vector3 getPosition(){return m_translate;}
		Vector3 getScale(){return m_scale;}
		Vector3 getRotate(){return m_rotate;}

	/* transform */
		void rotate(FsFloat rx,FsFloat ry,FsFloat rz);
		void rotateX(FsFloat r);
		void rotateY(FsFloat r);
		void rotateZ(FsFloat r);

		void scale(FsFloat sx,FsFloat sy,FsFloat sz);
		void scaleX(FsFloat s);
		void scaleY(FsFloat s);
		void scaleZ(FsFloat s);

		void move(FsFloat tx,FsFloat ty,FsFloat tz);
		void moveX(FsFloat t);
		void moveY(FsFloat t);
		void moveZ(FsFloat t);

	/* set transform */
		void setRotate(FsFloat rx,FsFloat ry,FsFloat rz);
		void setRotateX(FsFloat r);
		void setRotateY(FsFloat r);
		void setRotateZ(FsFloat r);

		void setScale(FsFloat sx,FsFloat sy,FsFloat sz);
		void setScaleX(FsFloat s);
		void setScaleY(FsFloat s);
		void setScaleZ(FsFloat s);

		void setPosition(FsFloat tx,FsFloat ty,FsFloat tz);
		void setPositionX(FsFloat t);
		void setPositionY(FsFloat t);
		void setPositionZ(FsFloat t);

		//void setPositionInWorld(FsFloat tx,FsFloat ty,FsFloat tz);
		//void setPositionXInWorld(FsFloat t);
		//void setPositionYInWorld(FsFloat t);
		//void setPositionZInWorld(FsFloat t);


		void hide(){m_visible=0;}
		void show(){m_visible=1;}
		FsBool getVisible(){return m_visible;}

	//	virtual FsBool hit(const Ray& r,FsInt bound_type);
		

};



